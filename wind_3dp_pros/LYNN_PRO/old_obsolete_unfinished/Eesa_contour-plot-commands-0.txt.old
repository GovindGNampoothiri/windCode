;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
epo    = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
ma     = 4d0*(mp + me)     ; -Alpha-Particle mass (kg)
qq     = 1.60217733d-19    ; -Fundamental charge (C)
kB     = 1.380658d-23      ; -Boltzmann Constant (J/K)
K_eV   = 1.160474d4        ; -Conversion = degree Kelvin/eV
c      = 2.99792458d8      ; -Speed of light in vacuum (m/s)
c2     = (c*1d-3)^2        ; -" " squared (km/s)^2
mm     = [-1d0,0d0,1d0]    ; -[Normal Cyclotron, Landau, Anomalous Cyclotron]
mass_e = 0.5109906d6       ; -Electron mass in eV/c^2
mass_p = mp*c^2/qq         ; -Proton mass in eV/c^2
u_mass = mass_e/c2         ; -Electron mass [eV/(km/s)^2]
p_mass = mass_p/c2         ; -Proton mass [eV/(km/s)^2]

invdenf = 1d-6*(2d0*!DPI)^2*(me*epo/qq^2)  ; => [cm^(-3) s^2]
;-----------------------------------------------------------------------------------------
; => Dates and time ranges for known IP shocks analyzed by Justin C. Kasper
;-----------------------------------------------------------------------------------------
date = '040396'
date = '040896'
date = '120296'  ; -> No PLB or ELB moments in time range
date = '011097'  ; -> No PLB or ELB moments in time range
date = '022797'
date = '051597'
date = '102497'
date = '121097'
date = '042398'
date = '043098'
date = '051598'
date = '082698'
date = '092498'
date = '021100'
date = '022000'
date = '040600'
date = '101101'
date = '102101'
date = '102501'
date = '112401'
date = '101002'

t = ['1996-04-03/08:45:00','1996-04-03/10:45:00']  ; -For moment writing
t = ['1996-04-08/01:41:00','1996-04-08/03:41:00']  ; -For moment writing
t = ['1996-12-02/15:56:00','1996-12-02/17:56:00']
t = ['1997-01-09/23:52:00','1997-01-10/01:52:00']
t = ['1997-02-27/16:29:00','1997-02-27/18:29:00']
t = ['1997-05-15/00:15:00','1997-05-15/02:15:00']  ; -For moment writing
t = ['1997-10-24/10:14:00','1997-10-24/12:14:00']  ; -For moment writing
t = ['1997-12-10/03:33:00','1997-12-10/05:33:00']  ; -For moment writing
t = ['1998-04-23/16:29:00','1998-04-23/18:29:00']  ; -For moment writing
t = ['1998-04-30/07:43:00','1998-04-30/09:43:00']  ; -For moment writing
t = ['1998-05-15/12:53:00','1998-05-15/14:53:00']  ; -For moment writing
t = ['1998-08-26/05:40:00','1998-08-26/07:40:00']  ; -For moment writing
t = ['1998-09-24/22:20:00','1998-09-25/00:20:00']
t = ['2000-02-11/01:35:00','2000-02-11/03:35:00']
t = ['2000-02-11/22:33:00','2000-02-12/00:33:00']
t = ['2000-02-20/20:03:00','2000-02-20/22:03:00']
t = ['2000-04-06/15:00:00','2000-04-06/18:00:00']  ; -For moment writing
t = ['2001-10-11/15:50:00','2001-10-11/17:50:00']
t = ['2001-10-21/15:40:00','2001-10-21/17:40:00']
t = ['2001-10-25/07:59:00','2001-10-25/09:59:00']
t = ['2001-11-24/04:31:00','2001-11-24/06:51:00']
t = ['2002-10-10/00:00:00','2002-10-10/04:00:00']
tr3 = time_double(t)

tramp = '1996-04-03/09:47:17.152'
tramp = '1996-04-08/02:41:09.767'
tramp = '1996-12-02/16:56:20.015'
tramp = '1997-01-10/00:52:02.939'
tramp = '1997-02-27/17:29:09.050'
tramp = '1997-05-15/01:15:22.000'
tramp = '1997-10-24/11:18:10.114'
tramp = '1997-12-10/04:33:14.664'
tramp = '1998-04-23/17:29:02.445'
tramp = '1998-04-30/08:43:15.291'
tramp = '1998-05-15/13:53:46.079'
tramp = '1998-08-26/06:40:24.972'
tramp = '1998-09-24/23:20:37.000'
tramp = '2000-02-11/02:35:07.281'
tramp = '2000-02-11/23:33:55.319'
tramp = '2000-02-20/21:03:45.761'
tramp = '2000-04-06/16:32:09.237'
tramp = '2001-10-11/16:50:55.000'
tramp = '2001-10-21/16:40:43.000'
tramp = '2001-10-25/08:59:28.000'
tramp = '2001-11-24/05:51:55.000'
tura  = time_double(tramp)

mydate = my_str_date(DATE=date)
date   = mydate.S_DATE[0]  ; -('MMDDYY')
mdate  = mydate.DATE[0]    ; -('YYYYMMDD')
ldate  = STRMID(mdate,4L,4L)+STRMID(mdate,0L,4L)
;-----------------------------------------------------------------------------------------
; => Load MFI data
;-----------------------------------------------------------------------------------------
mag3  = read_wind_mfi(TRANGE=tr3)
t3x   = mag3.MAG.X
bmag4 = mag3.MAG.Y
magf4 = mag3.BGSE.Y
nt    = N_ELEMENTS(t3x) 
store_data,'wi_B3_MAG(GSE)',DATA={X:mag3.MAG.X,Y:bmag4}
store_data,'wi_B3(GSE)',DATA={X:mag3.MAG.X,Y:magf4}
options,'wi_B3_MAG(GSE)',"YTITLE","|B| (nT)!C[GSE,3s]"
options,'wi_B3(GSE)',"YTITLE","B (nT)!C[GSE,3s]"
options,'wi_B3(GSE)','COLORS',[250,150,50]
nnw = tnames()
options,nnw,"YSTYLE",1
options,nnw,"PANEL_SIZE",2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
nn0 =['wi_B3_MAG(GSE)','wi_B3(GSE)']
;-----------------------------------------------------------------------------------------
; => Find IDL Save Files
;-----------------------------------------------------------------------------------------
default_extension = '/wind_3dp_pros/wind_data_dir/Wind_3DP_DATA/IDL_Save_Files/'
default_location  = default_extension+date+'/'

DEFSYSV,'!wind3dp_umn',EXISTS=exists
IF NOT KEYWORD_SET(exists) THEN mdir  = FILE_EXPAND_PATH('')+default_location
IF     KEYWORD_SET(exists) THEN mdir  = !wind3dp_umn.WIND_3DP_SAVE_FILE_DIR+date+'/'
IF (mdir EQ '')            THEN mdir = default_location
mfiles = FILE_SEARCH(mdir,'*.sav')
;-----------------------------------------------------------------------------------------
; -Load Eesa and Pesa data
;-----------------------------------------------------------------------------------------
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; => Note:  In the IDL save files I used, variables like "ael" are arrays of all the 
;             Wind/3DP data structures within some time period (defined else where)
;             for the Eesa Low detector.  Thus, "aelb" is for Eesa Low Burst, "apl" is
;             for Pesa Low, etc.  The prefix "a" is used loosely to represent ALL here.
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
RESTORE,mfiles[0]
RESTORE,mfiles[1]
;-----------------------------------------------------------------------------------------
; => Find shock info
;-----------------------------------------------------------------------------------------
sh_mit     = read_shocks_jck_database()
mit_dates  = sh_mit.SDATES                 ; => 'MMDDYY'
shocks     = sh_mit.SHOCK
header     = sh_mit.HEADER
ymdb_ra    = header.DATE_TIME              ; => ['YYYY-MM-DD/HH:MM:SS.sss']
mts        = my_time_string(ymdb_ra,STR=1,FORM=1)
unix_ra    = mts.UNIX

a_ushn     = shocks.USH_N[*,0]                 ; => Upstream normal flow speed (km/s) [shock frame]
a_dushn    = shocks.D_USH_N[*,0]               ; => Uncertainty in a_ushn
a_compr    = shocks.COMPRESSION                ; => N_2/N_1 (density compression ratio)
a_dcompr   = shocks.D_COMPRESSION              ; => Uncertainty in a_compr
a_machf    = REFORM(shocks.MACH_FAST[*,0])     ; => Fast Mach number
a_dmachf   = REFORM(shocks.D_MACH_FAST[*,0])   ; => Uncertainty in a_machf
a_thbn     = shocks.THETA_BN                   ; => Shock normal angle (deg)
a_dthbn    = shocks.D_THETA_BN                 ; => Uncertainty in a_thbn
a_vsw      = header.VSW[*,*,0]                 ; => Upstream Avg. solar wind velocity [GSE, km/s]
a_dvsw     = header.D_VSW[*,*,0]               ; => Uncertainty in a_vsw
a_magf     = header.MAGF[*,*,0]                ; => Upstream Avg. magnetic field [GSE, nT]
a_dmagf    = header.D_MAGF[*,*,0]              ; => Uncertainty in a_magf
a_csup     = header.C_SOUND[*,0]               ; => Upstream Avg. sound speed (km/s)
a_dcsup    = header.D_C_SOUND[*,0]             ; => Uncertainty in a_csup
a_vaup     = header.V_ALFVEN[*,0]              ; => Upstream Avg. Alfven speed (km/s)
a_dvaup    = header.D_V_ALFVEN[*,0]            ; => Uncertainty in a_vaup
a_shnorms  = shocks.SH_NORM                    ; => Shock normal vector (GSE)

; => Determine shock to use
gshock     = WHERE(mit_dates EQ date,gsh)
; => There are two shocks on 2000-02-11, but the 2nd is a supercritical 
;      quasi-perpendicular shock while the first is quasi-parallel so the 2nd
;      is typically examined more frequently
IF (date EQ '021100') THEN kk = 1 ELSE kk = 0
gnorm = REFORM(a_shnorms[gshock[kk],*])
gthbn = (REFORM(a_thbn[gshock[kk]]))[0]
gcomp = (REFORM(a_compr[gshock[kk]]))[0]
gavsw = REFORM(a_vsw[gshock[kk],*])
gmagf = REFORM(a_magf[gshock[kk],*])
;-----------------------------------------------------------------------------------------
; => Calculate ion moments from Pesa Low
;-----------------------------------------------------------------------------------------

pesa_low_moment_calibrate,DATE=date,/NOLOAD,PLM=apl,PLBM=aplb,TRANGE=tr3,COMPRESS=gcomp,MIDRA=tura[0]
;-----------------------------------------------------------------------------------------
; => Add the solar wind velocity, magnetic field, and SC potential to structures
;-----------------------------------------------------------------------------------------
add_vsw2,aelb,'V_sw2'
add_magf2,aelb,'wi_B3(GSE)'
add_scpot,aelb,'sc_pot_3'
;-----------------------------------------------------------------------------------------
; => Look at Electron moments in solar wind frame (SWF) with 17 Pitch-Angles (PAs)
;-----------------------------------------------------------------------------------------
nelb     = N_ELEMENTS(aelb)
; => Calculate distribution functions (DFs) and pitch-angle distributions (PADs) after
;      converting into SWF
test     = eesa_data_4(aelb,NUM_PA=17L)
myb_delb = test.MOMENTS
myb_pdb  = test.PADS
;-----------------------------------------------------------------------------------------
; => Calculate various moments of the DF and send results to TPLOT
;-----------------------------------------------------------------------------------------
moments_array_3dp,PLM=my_delb,PLBM=myb_delb,AVGTEMP=avtempe,T_PERP=tperp_e,$
                  T_PARA=tpara_e,V_THERM=vtherme,VELOCITY=elb_vels,$
                  PRESSURE=press_e,MOMS=moms,/TO_TPLOT,SUFFX='el'

;-----------------------------------------------------------------------------------------
; => Plot all Eesa Low Burst (ELB) Distribution Functions (DFs)
;-----------------------------------------------------------------------------------------

; => Using gyrotropy
ngrid   = 30                                              ; => # of grids in contour
vlim    = 2d4                                             ; => velocity limit (km/s)
vout    = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
; => these are my directories so you may need to change them according to your system
dfdir   = '~/Desktop/3DP_contours/'+date[0]+'/PS_ELB/'    
pddir   = '~/Desktop/3DP_contours/'+date[0]+'/PADS_ELB/'
mtsel   = my_time_string(aelb.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
dfsuff  = '_17PAs-30Grids-one-count_vtherm-taniso-heatf'
pdsuff  = '_17PAs-30Grids-7-Highest-Energies'

; => look at one example first then I will show how to implement this in an array
j       = 0L
dat     = aelb[j]
; => Convert into the solar wind frame taking into account SC Potential and interpolate
;      the data back to the original energy bins [since frame conversion and SC Pot.
;      adjustments lower energy bin values]
del     = convert_vframe(dat,/INTERP)
; => Produce a pitch-angle distribution (PAD) with 17 PAs
pd      = pad(del,NUM_PA=17L)
; => Produce a gyrotropic distribution function (DF) from pd
df      = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
; => Get the relevant structure tags out of df and add to del
extract_tags,del,df
; => Plot PAD with only the 7 highest energy bins with units of number flux on top plot
;      and energy flux on bottom plot
my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]
; => Plot the DF and overplot the shock normal vector, heat flux vector, one-count level,
;      the thermal speed, and temperature anisotropy estimate
cont2d,del,NGRID=ngrid,VLIM=vlim,GNORM=gnorm,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat

; => Now let's remove data below the SC Potential after converting into the solar wind frame
;      to observe how it affects the results
del     = convert_vframe(dat,/INTERP)
bad     = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)
IF (bd GT 0) THEN del.DATA[bad,*] = f
pd      = pad(del,NUM_PA=17L)
df      = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
extract_tags,del,df

my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]

cont2d,del,NGRID=ngrid,VLIM=vlim,GNORM=gnorm,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat

; => Plot all of the DFs and PADs to PS files using interpolation and keeping data
;      with energies below SC Pot.
exdfsx = '_interp-low_DF'
expdsx = '_interp-low_PAD'
FOR j=0L, nelb - 1L DO BEGIN                                                        $
  dat   = aelb[j]                                                                 & $
  del   = convert_vframe(dat,/INTERP)                                             & $
  pd    = pad(del,NUM_PA=17)                                                      & $
  df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)                   & $
  extract_tags,del,df                                                             & $
  pltn2 = pddir[0]+'elb_'+gdate[j]+'_'+UTtime[j]+pdsuff[0]+expdsx[0]              & $
  popen,pltn2,/port                                                               & $
    my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]                                 & $
  pclose                                                                          & $
  pltn1  = dfdir+'elb_'+gdate[j]+'_'+UTtime[j]+dfsuff[0]+exdfsx[0]                & $
  popen,pltn1,/port                                                               & $
    cont2d,del,NGRID=30,VLIM=2d4,GNORM=gnorm,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat   & $
  pclose

; => Plot all of the DFs and PADs to PS files using interpolation and killing data
;      with energies below SC Pot.
exdfsx = '_interp-no-low_DF'
expdsx = '_interp-no-low_PAD'
FOR j=0L, nelb - 1L DO BEGIN                                                        $
  dat   = aelb[j]                                                                 & $
  del   = convert_vframe(dat,/INTERP)                                             & $
  bad   = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)                                 & $
  IF (bd GT 0) THEN del.DATA[bad,*] = f                                           & $
  pd    = pad(del,NUM_PA=17)                                                      & $
  df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)                   & $
  extract_tags,del,df                                                             & $
  pltn2 = pddir[0]+'elb_'+gdate[j]+'_'+UTtime[j]+pdsuff[0]+expdsx[0]              & $
  popen,pltn2,/port                                                               & $
    my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]                                 & $
  pclose                                                                          & $
  pltn1  = dfdir+'elb_'+gdate[j]+'_'+UTtime[j]+dfsuff[0]+exdfsx[0]                & $
  popen,pltn1,/port                                                               & $
    cont2d,del,NGRID=30,VLIM=2d4,GNORM=gnorm,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat   & $
  pclose

; => Plot all of the DFs and PADs but try 24 PAs instead
dfsuff  = '_24PAs-30Grids-one-count_vtherm-taniso-heatf'
pdsuff  = '_24PAs-30Grids-7-Highest-Energies'
exdfsx  = '_interp-low_DF'
expdsx  = '_interp-low_PAD'
FOR j=0L, nelb - 1L DO BEGIN                                                        $
  dat   = aelb[j]                                                                 & $
  del   = convert_vframe(dat,/INTERP)                                             & $
  pd    = pad(del,NUM_PA=24)                                                      & $
  df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)                   & $
  extract_tags,del,df                                                             & $
  pltn2 = pddir[0]+'elb_'+gdate[j]+'_'+UTtime[j]+pdsuff[0]+expdsx[0]              & $
  popen,pltn2,/port                                                               & $
    my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]                                 & $
  pclose                                                                          & $
  pltn1  = dfdir+'elb_'+gdate[j]+'_'+UTtime[j]+dfsuff[0]+exdfsx[0]                & $
  popen,pltn1,/port                                                               & $
    cont2d,del,NGRID=30,VLIM=2d4,GNORM=gnorm,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat   & $
  pclose

;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; => Note:  cont2d.pro uses results from distfunc.pro, which assumes gyrotropy
;             intrinsically.  eh_cont3d.pro, however, does NOT assume gyrotropy so
;             one can investigate the full 3D distribution a little more realistically
;             with eh_cont3d.pro.  However, be careful of the scaling of the
;             parallel and perpendicular cuts.  I am not entirely confident I have
;             calculated those correctly...
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

; => Try plotting ELB DFs without assuming gyrotropy
mts     = my_time_string(aelb.TIME,UNIX=1)
ymdb    = mts.DATE_TIME
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
nelb    = N_ELEMENTS(aelb)
ngrid   = 30
vlim    = 2d4
sunv    = [1.,0.,0.]     ; => sun direction in GSE coordinates
dfdir   = '~/Desktop/3DP_contours/'+date[0]+'/PS_ELB/'    
sunn    = 'Sun Dir.'     ; => string associated with sun direction
suffx   = '_3D-30Grids_sundir_Vsw-B-Plane_one-count-shock-normal_DF'   ; => Suffix used when saving ELB DFs
FOR j=0L, nphb - 1L DO BEGIN                                                                  $
  dat    = aelb[j]                                                                          & $
  pltn1  = dfdir[0]+'/elb_'+gdate[j]+'_'+UTtime[j]+suffx[0]                                 & $
  popen,pltn1,/port                                                                         & $
    eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,EX_VEC=sunv,EX_VN=sunn,/SM_CUTS,/ONE_C,NNORM=gnorm  & $
  pclose




;-----------------------------------------------------------------------------------------
; => Calculate ion and electron moments and send results to TPLOT
;-----------------------------------------------------------------------------------------

;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; => Note:  use this code prior to running pesa_low_moment_calibrate.pro and
;             moments_array_3dp.pro above since it does both independently
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
eesa_pesa_low_to_tplot,DATE=hdate,TRANGE=tr3,/G_MAGF,PLM=apl,PLBM=aplb,
                       ELM=ael,ELBM=aelb,/TO_TPLOT


;-----------------------------------------------------------------------------------------
; => Notes:
;-----------------------------------------------------------------------------------------
sum = mom_sum(myb_delb[8])
sumt = mom_translate(sum)

help, sumt,/str   ; => sum has similar format but in different momentum frame
;** Structure <217f810>, 17 tags, length=324, data length=320, refs=2:
;   N               FLOAT           2818.14
;   NV              FLOAT     Array[3]
;   NVV             FLOAT     Array[6]
;   NVVV            FLOAT     Array[10]
;   NVVVV           FLOAT     Array[15]
;   MAP_R2          BYTE      Array[3, 3]
;   MAP_V2          BYTE      Array[6]
;   MAP_R3          BYTE      Array[3, 3, 3]
;   MAP_V3          BYTE      Array[10]
;   MAP_R4          BYTE      Array[3, 3, 3, 3]
;   MAP_V4          BYTE      Array[15]
;   SC_POT          FLOAT           8.36317
;   MASS            FLOAT       5.68566e-06
;   CHARGE          INT             -1
;   MAGF            FLOAT     Array[3]
;   ERANGE          FLOAT     Array[2]
;   MAXMOMENT       INT              4

i3         = [[0,4,8],[9,13,17],[18,22,26]]

print, sum.map_r3
;   3   5   2
;   5   6   9
;   2   9   7
;
;   5   6   9
;   6   4   1
;   9   1   8
;
;   2   9   7
;   9   1   8
;   7   8   0

print, sum.map_r3[i3]
;   3   6   7
;   5   4   8
;   2   1   0

help, sumt.NVVV[sumt.MAP_R3], (sumt.NVVV[sumt.MAP_R3])[i3]
;<Expression>    FLOAT     = Array[3, 3, 3]
;<Expression>    FLOAT     = Array[3, 3]

print, sumt.NVVV[sumt.MAP_R3]
;     -15344.8      9197.49     -2401.42
;      9197.49     -9365.81      1364.55
;     -2401.42      1364.55     -4523.51
;
;      9197.49     -9365.81      1364.55
;     -9365.81      24393.9     -1975.30
;      1364.55     -1975.30      5499.32
;
;     -2401.42      1364.55     -4523.51
;      1364.55     -1975.30      5499.32
;     -4523.51      5499.32     -3039.84

print, (sumt.NVVV[sumt.MAP_R3])[i3]
;     -15344.8     -9365.81     -4523.51
;      9197.49      24393.9      5499.32
;     -2401.42     -1975.30     -3039.84

test = (sumt.NVVV[sumt.MAP_R3])[i3]
print, TOTAL(test,1,/NAN)
;     -29234.1      39090.7     -7416.55

;---------------------------------------------------------------------
; => QVEC = the sum  of the diagonals of each 3x3 matrix in sumt.NVVV
;
; => Q_x  = xxx + yyx + zzx
; => Q_y  = xxy + yyy + zzy
; => Q_z  = xxz + yyz + zzz
;
; => Q = standard definition of the heat flux from Gary et. al. [1993]
;---------------------------------------------------------------------

y = strarr(3,3)
vec = ['x','y','z']
for i=0L, 2L do begin $  
  for j=0L, 2L do begin $
      y[j,i] = vec[j]+vec[i]
print, y
;xx yx zx
;xy yy zy
;xz yz zz

vstr = strarr(3)
for i=0L, 2L do begin $  
  vstr[i] = 'v'+vec[i]

vout = strarr(3,3)
for i=0L, 2L do begin $  
  for j=0L, 2L do begin $
      vout[j,i] = '('+vstr[j]+' '+vstr[i]+')'

array1 = [ [1, 2, 1] , [2, -1, 2] ]
array2 = [ [1, 3], [0, 1], [1, 1] ]
print, array1
;       1       2       1
;       2      -1       2
print, array2
;       1       3
;       0       1
;       1       1

help, array1, array2
;ARRAY1          INT       = Array[3, 2]
;ARRAY2          INT       = Array[2, 3]
print, array1 # array2
;           7          -1           7
;           2          -1           2
;           3           1           3


x      = findgen(9) + 1.
v_test = [0.,10.,100.]
print, x # v_test
;      0.00000      0.00000      0.00000      0.00000      0.00000      0.00000      0.00000      0.00000      0.00000
;      10.0000      20.0000      30.0000      40.0000      50.0000      60.0000      70.0000      80.0000      90.0000
;      100.000      200.000      300.000      400.000      500.000      600.000      700.000      800.000      900.000
print, reform(x # v_test,3,3,3)
;      0.00000      0.00000      0.00000
;      0.00000      0.00000      0.00000
;      0.00000      0.00000      0.00000
;
;      10.0000      20.0000      30.0000
;      40.0000      50.0000      60.0000
;      70.0000      80.0000      90.0000
;
;      100.000      200.000      300.000
;      400.000      500.000      600.000
;      700.000      800.000      900.000



y = strarr(3,3,3)
vec = ['x','y','z']
for i=0L, 2L do begin $  
  for j=0L, 2L do begin $
    for k=0L, 2L do begin $
      y[k,j,i] = vec[k]+vec[j]+vec[i]

print, y,FORMAT='(";",3a5)'
;  xxx  yxx  zxx
;  xyx  yyx  zyx
;  xzx  yzx  zzx
;
;  xxy  yxy  zxy
;  xyy  yyy  zyy
;  xzy  yzy  zzy
;
;  xxz  yxz  zxz
;  xyz  yyz  zyz
;  xzz  yzz  zzz

;---------------------------------------------------------------------
; Use to create Heat Flux Tensor:
;
; nvvv = ['zzz','yyz','xxz','xxx','yyy','xxy','xyy','xzz','yzz','xyz']
;---------------------------------------------------------------------
; Thus, nvvv must be:
nvvv = [y[2,2,2],y[1,1,2],y[0,0,2],y[0,0,0],y[1,1,1],$
        y[0,0,1],y[0,1,1],y[0,2,2],y[1,2,2],y[0,1,2]]

y_str = 'y['
yform = '(a2,I1.1,",",I1.1,",",I1.1,"]")'
z     = strarr(3,3,3)
for i=0L, 2L do begin $  
  for j=0L, 2L do begin $
    for k=0L, 2L do begin $
      el_str   = STRTRIM(STRING(FORMAT=yform,y_str,k,j,i),2L) & $
      z[k,j,i] = el_str

print, z,FORMAT='(";",3a12)'
;    y[0,0,0]    y[1,0,0]    y[2,0,0]
;    y[0,1,0]    y[1,1,0]    y[2,1,0]
;    y[0,2,0]    y[1,2,0]    y[2,2,0]
;
;    y[0,0,1]    y[1,0,1]    y[2,0,1]
;    y[0,1,1]    y[1,1,1]    y[2,1,1]
;    y[0,2,1]    y[1,2,1]    y[2,2,1]
;
;    y[0,0,2]    y[1,0,2]    y[2,0,2]
;    y[0,1,2]    y[1,1,2]    y[2,1,2]
;    y[0,2,2]    y[1,2,2]    y[2,2,2]

; => or another way to look at it

;  xxx          
;               
;               
;
;               
;  xyy  yyy     
;               
;
;  xxz          
;  xyz  yyz     
;  xzz       zzz


; => or another way to look at it

       'xzx'----'yzx'----'zzx'
        /I       /        /|
       / I      /        / |
    'xyx'----'yyx'----'zyx'|
     /   I    /        /   |
    /    I   /        /    |
 'xxx'----'yxx'----'zxx'   |
   |     I           |     | 
   |   'xzy'----'yzy'|---'zzy'
   |    /I       /   |    /|
   |   / I      /    |   / |
   |'xyy'----'yyy'---|'zyy'|
   | /   I    /      | /   |
   |/    I   /       |/    |
 'xxy'----'yxy'----'zxy'   |
   |     I           |     | 
   |   'xzz'----'yzz'|---'zzz'
   |    /        /   |    /
   |   /        /    |   /
   |'xyz'----'yyz'---|'zyz'
   | /        /      | /
   |/        /       |/
 'xxz'----'yxz'----'zxz'



; => or another way to look at it

       '   '----'   '----'   '
        /I       /        /|
       / I      /        / |
    '   '----'   '----'   '|
     /   I    /        /   |
    /    I   /        /    |
 'xxx'----'   '----'   '   |
   |     I           |     | 
   |   '   '----'   '|---'   '
   |    /I       /   |    /|
   |   / I      /    |   / |
   |'xyy'----'yyy'---|'   '|
   | /   I    /      | /   |
   |/    I   /       |/    |
 'xxy'----'   '----'   '   |
   |     I           |     | 
   |   'xzz'----'yzz'|---'zzz'
   |    /        /   |    /
   |   /        /    |   /
   |'xyz'----'yyz'---|'   '
   | /        /      | /
   |/        /       |/
 'xxz'----'   '----'   '

; => or another way to look at it (assumed symmetry)



       'xxz'----'xyz'----'xzz'
        /I       /        /|
       / I      /        / |
    'xxy'----'xyy'----'xyz'|
     /   I    /        /   |
    /    I   /        /    |
 'xxx'----'xxy'----'xxz'   |
   |     I           |     | 
   |   'xyz'----'yyz'|---'yzz'
   |    /I       /   |    /|
   |   / I      /    |   / |
   |'xyy'----'yyy'---|'yyz'|
   | /   I    /      | /   |
   |/    I   /       |/    |
 'xxy'----'xyy'----'xyz'   |
   |     I           |     | 
   |   'xzz'----'yzz'|---'zzz'
   |    /        /   |    /
   |   /        /    |   /
   |'xyz'----'yyz'---|'yzz'
   | /        /      | /
   |/        /       |/
 'xxz'----'xyz'----'xzz'



; => or look at it matching elements


       '   '----'xyz'----'   '               'xxz'----'   '----'   '        
        /I       /        /|                  /I       /        /|          
       / I      /        / |                 / I      /        / |          
    '   '----'   '----'xyz'|              '   '----'   '----'   '|          
     /   I    /        /   |               /   I    /        /   |          
    /    I   /        /    |              /    I   /        /    |          
 '   '----'   '----'   '   |           '   '----'   '----'xxz'   |          
   |     I           |     |             |     I           |     |          
   |   'xyz'----'   '|---'   '           |   '   '----'   '|---'   '        
   |    /I       /   |    /|             |    /I       /   |    /|          
   |   / I      /    |   / |             |   / I      /    |   / |          
   |'   '----'   '---|'   '|             |'   '----'   '---|'   '|          
   | /   I    /      | /   |             | /   I    /      | /   |          
   |/    I   /       |/    |             |/    I   /       |/    |          
 '   '----'   '----'xyz'   |           '   '----'   '----'   '   |          
   |     I           |     |             |     I           |     |          
   |   '   '----'   '|---'   '           |   '   '----'   '|---'   '        
   |    /        /   |    /              |    /        /   |    /           
   |   /        /    |   /               |   /        /    |   /            
   |'xyz'----'   '---|'   '              |'   '----'   '---|'   '           
   | /        /      | /                 | /        /      | /              
   |/        /       |/                  |/        /       |/               
 '   '----'xyz'----'   '               'xxz'----'   '----'   '              






       '   '----'   '----'   '               '   '----'   '----'xzz'        
        /I       /        /|                  /I       /        /|          
       / I      /        / |                 / I      /        / |          
    '   '----'   '----'   '|              '   '----'   '----'   '|          
     /   I    /        /   |               /   I    /        /   |          
    /    I   /        /    |              /    I   /        /    |          
 '   '----'   '----'   '   |           '   '----'   '----'   '   |          
   |     I           |     |             |     I           |     |          
   |   '   '----'yyz'|---'   '           |   '   '----'   '|---'   '        
   |    /I       /   |    /|             |    /I       /   |    /|          
   |   / I      /    |   / |             |   / I      /    |   / |          
   |'   '----'   '---|'yyz'|             |'   '----'   '---|'   '|          
   | /   I    /      | /   |             | /   I    /      | /   |          
   |/    I   /       |/    |             |/    I   /       |/    |          
 '   '----'   '----'   '   |           '   '----'   '----'   '   |          
   |     I           |     |             |     I           |     |          
   |   '   '----'   '|---'   '           |   'xzz'----'   '|---'   '        
   |    /        /   |    /              |    /        /   |    /           
   |   /        /    |   /               |   /        /    |   /            
   |'   '----'yyz'---|'   '              |'   '----'   '---|'   '           
   | /        /      | /                 | /        /      | /              
   |/        /       |/                  |/        /       |/               
 '   '----'   '----'   '               '   '----'   '----'xzz'              


       '   '----'   '----'   '               '   '----'   '----'   '        
        /I       /        /|                  /I       /        /|          
       / I      /        / |                 / I      /        / |          
    'xxy'----'   '----'   '|              '   '----'xyy'----'   '|          
     /   I    /        /   |               /   I    /        /   |          
    /    I   /        /    |              /    I   /        /    |          
 '   '----'xxy'----'   '   |           '   '----'   '----'   '   |          
   |     I           |     |             |     I           |     |          
   |   '   '----'   '|---'   '           |   '   '----'   '|---'   '        
   |    /I       /   |    /|             |    /I       /   |    /|          
   |   / I      /    |   / |             |   / I      /    |   / |          
   |'   '----'   '---|'   '|             |'xyy'----'   '---|'   '|          
   | /   I    /      | /   |             | /   I    /      | /   |          
   |/    I   /       |/    |             |/    I   /       |/    |          
 'xxy'----'   '----'   '   |           '   '----'xyy'----'   '   |          
   |     I           |     |             |     I           |     |          
   |   '   '----'   '|---'   '           |   '   '----'   '|---'   '        
   |    /        /   |    /              |    /        /   |    /           
   |   /        /    |   /               |   /        /    |   /            
   |'   '----'   '---|'   '              |'   '----'   '---|'   '           
   | /        /      | /                 | /        /      | /              
   |/        /       |/                  |/        /       |/               
 '   '----'   '----'   '               '   '----'   '----'   '              


       'xxz'----'xyz'----'xzz'               'xxz'----'xyz'----'xzz'        
        /I       /        /|                  /I       /        /|          
       / I      /        / |                 / I      /        / |          
    'xxy'----'xyy'----'xyz'|              'xxy'----'xyy'----'xyz'|          
     /   I    /        /   |               /   I    /        /   |          
    /    I   /        /    |              /    I   /        /    |          
 'xxx'----'xxy'----'xxz'   |           'xxx'----'xxy'----'xxz'   |          
   |     I           |     |             |     I           |     |          
   |   'xyz'----'yyz'|---'yzz'           |   'xyz'----'yyz'|---'yzz'        
   |    /I       /   |    /|             |    /I       /   |    /|          
   |   / I      /    |   / |             |   / I      /    |   / |          
   |'xyy'----'yyy'---|'yyz'|             |'xyy'----'yyy'---|'yyz'|          
   | /   I    /      | /   |             | /   I    /      | /   |          
   |/    I   /       |/    |             |/    I   /       |/    |          
 'xxy'----'xyy'----'xyz'   |           'xxy'----'xyy'----'xyz'   |          
   |     I           |     |             |     I           |     |          
   |   'xzz'----'yzz'|---'zzz'           |   'xzz'----'yzz'|---'zzz'        
   |    /        /   |    /              |    /        /   |    /           
   |   /        /    |   /               |   /        /    |   /            
   |'xyz'----'yyz'---|'yzz'              |'xyz'----'yyz'---|'yzz'           
   | /        /      | /                 | /        /      | /              
   |/        /       |/                  |/        /       |/               
 'xxz'----'xyz'----'xzz'               'xxz'----'xyz'----'xzz'              


       'xxz'----'xyz'----'xzz'               'xxz'----'xyz'----'xzz'        
        /I       /        /|                  /I       /        /|          
       / I      /        / |                 / I      /        / |          
    'xxy'----'xyy'----'xyz'|              'xxy'----'xyy'----'xyz'|          
     /   I    /        /   |               /   I    /        /   |          
    /    I   /        /    |              /    I   /        /    |          
 'xxx'----'xxy'----'xxz'   |           'xxx'----'xxy'----'xxz'   |          
   |     I           |     |             |     I           |     |          
   |   'xyz'----'yyz'|---'yzz'           |   'xyz'----'yyz'|---'yzz'        
   |    /I       /   |    /|             |    /I       /   |    /|          
   |   / I      /    |   / |             |   / I      /    |   / |          
   |'xyy'----'yyy'---|'yyz'|             |'xyy'----'yyy'---|'yyz'|          
   | /   I    /      | /   |             | /   I    /      | /   |          
   |/    I   /       |/    |             |/    I   /       |/    |          
 'xxy'----'xyy'----'xyz'   |           'xxy'----'xyy'----'xyz'   |          
   |     I           |     |             |     I           |     |          
   |   'xzz'----'yzz'|---'zzz'           |   'xzz'----'yzz'|---'zzz'        
   |    /        /   |    /              |    /        /   |    /           
   |   /        /    |   /               |   /        /    |   /            
   |'xyz'----'yyz'---|'yzz'              |'xyz'----'yyz'---|'yzz'           
   | /        /      | /                 | /        /      | /              
   |/        /       |/                  |/        /       |/               
 'xxz'----'xyz'----'xzz'               'xxz'----'xyz'----'xzz'              

















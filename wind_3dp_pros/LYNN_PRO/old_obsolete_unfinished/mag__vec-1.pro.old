;+
;*****************************************************************************************
;
;  FUNCTION :   mag__vec.pro
;  PURPOSE  :   This routine finds the magnitude of an input vector and returns the
;                 result as either a one- or two-dimensional array.
;
;  CALLED BY:   
;               NA
;
;  CALLS:
;               format_2d_vec.pro
;
;  REQUIRES:    
;               1)  UMN Modified Wind/3DP IDL Libraries
;
;  INPUT:
;               VEC  :  [N,3]- or [3,N]-element array to be forced to a [N,3]-element
;                         array
;
;  EXAMPLES:    
;               NA
;
;  KEYWORDS:    
;               TWO  :  If set, routine returns |VEC| as an [N,3]--element array, where
;                         the magnitudes are copied in each of the 2nd dimensions
;
;   CHANGED:  1)  Routine can now handle complex inputs for VEC
;                                                                   [03/19/2014   v1.0.1]
;
;   NOTES:      
;               1)  See examples in format_2d_vec.pro
;
;  REFERENCES:  
;               
;
;   CREATED:  09/10/2013
;   CREATED BY:  Lynn B. Wilson III
;    LAST MODIFIED:  03/19/2014   v1.0.1
;    MODIFIED BY: Lynn B. Wilson III
;
;*****************************************************************************************
;-

FUNCTION mag__vec,vec,TWO=two

;;----------------------------------------------------------------------------------------
;;  Define some constants and dummy variables
;;----------------------------------------------------------------------------------------
f              = !VALUES.F_NAN
d              = !VALUES.D_NAN
dumb3r         = REPLICATE(1,3)
dumb3i         = REPLICATE(DCOMPLEX(1,1),3)
;;  Error messages
noinput_mssg   = 'No input was supplied...'
;;----------------------------------------------------------------------------------------
;;  Check input
;;----------------------------------------------------------------------------------------
test           = (N_PARAMS() NE 1) OR (N_ELEMENTS(vec) EQ 0)
IF (test) THEN BEGIN
  MESSAGE,noinput_mssg[0],/INFORMATIONAL,/CONTINUE
  RETURN,0
ENDIF
vv             = REFORM(vec)
;;----------------------------------------------------------------------------------------
;;  Format vector
;;----------------------------------------------------------------------------------------
vec2d          = format_2d_vec(vec)
test           = (N_ELEMENTS(vec2d) LT 3)
IF (test) THEN RETURN,0         ;;  Error messages found in format_2d_vec.pro
;;----------------------------------------------------------------------------------------
;;  Calculate magnitude
;;----------------------------------------------------------------------------------------
;;  Check for complex values
test           = (TOTAL(IMAGINARY(vec2d)) EQ 0)
test2d         = (N_ELEMENTS(two) EQ 0) OR ~KEYWORD_SET(two)
IF (test) THEN BEGIN
  ;;  Input is real
  VdotV          = vec2d^2
  mag0           = SQRT(TOTAL(VdotV,2L,/NAN))
  IF (test2d) THEN mag = mag0 ELSE mag = mag0 # dumb3r
ENDIF ELSE BEGIN
  ;;  Input has finite imaginary parts
  VdotV          = ABS(vec2d*CONJ(vec2d))
  mag0           = SQRT(TOTAL(VdotV,2L,/NAN))
  IF (test2d) THEN mag = mag0 ELSE mag = mag0 # dumb3r
ENDELSE
;IF (test) THEN VdotV = vec2d^2 ELSE VdotV = vec2d*CONJ(vec2d)
;mag            = SQRT(TOTAL(VdotV,2L,/NAN))
;;mag            = SQRT(TOTAL(vec2d^2,2L,/NAN))
;test           = (N_ELEMENTS(two) EQ 0) OR ~KEYWORD_SET(two)
;IF (test) THEN BEGIN
;  ;;  User wants a 1D return
;  RETURN, mag
;ENDIF ELSE BEGIN
;  ;;  User wants a 2D return
;  RETURN, mag # REPLICATE(1,3)
;ENDELSE
;;----------------------------------------------------------------------------------------
;;  Return to user
;;----------------------------------------------------------------------------------------

RETURN, mag
END
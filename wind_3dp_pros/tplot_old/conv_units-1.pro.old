;+
;*****************************************************************************************
;
;  FUNCTION :   conv_units.pro
;  PURPOSE  :   This is a wrapping program for the unit conversion programs for Wind
;                 3DP particle distribution structures.
;
;  CALLED BY: 
;               plot3d.pro
;               add_df2dp.pro
;               mom_sum.pro
;               moments_3d.pro
;
;  CALLS:
;               convert_esa_units.pro
;               convert_ph_units.pro
;               convert_sf_units.pro
;               convert_so_units.pro
;               convert_sst_units.pro
;
;  REQUIRES:    NA
;
;  INPUT:
;               DATA      :  A 3DP data structure returned by get_??.pro
;               UNITS     :  A scalar string defining the units to convert to
;                              One of the following are allowed:
;                              1)  'counts'  ; => # per data bin per energy bin
;                              2)  'rate'    ; => (s)
;                              3)  'crate'   ; => (s) scaled rate
;                              4)  'eflux'   ; => energy flux
;                              5)  'flux'    ; => number flux
;                              6)  'df'      ; => distribution function units
;
;  EXAMPLES:    NA
;
;  KEYWORDS:  
;               SCALE     :  Set to a named variable to return the conversion factor
;                              array used to scale the data
;
;   CHANGED:  1)  Davin Larson changed something...       [??/??/????   v1.0.?]
;             2)  Re-wrote and cleaned up                 [06/22/2009   v1.1.0]
;             3)  Fixed syntax issue if data is an array of structures
;                                                         [08/05/2009   v1.1.1]
;
;   CREATED:  ??/??/????
;   CREATED BY:  Davin Larson
;    LAST MODIFIED:  08/05/2009   v1.1.1
;    MODIFIED BY: Lynn B. Wilson III
;
;*****************************************************************************************
;-

FUNCTION conv_units, data,units,SCALE=scale

new_data = data
proc     = data[0].UNITS_PROCEDURE
IF NOT KEYWORD_SET(units) THEN units = 'Eflux'
CALL_PROCEDURE,proc,new_data,units,SCALE=scale
RETURN,new_data
END
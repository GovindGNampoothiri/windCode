;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
epo    = 8.854187817d-12   ; => Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; => Permeability of free space (N/A^2 or H/m)
me     = 9.10938291d-31    ; => Electron mass (kg) [2010 value]
mp     = 1.672621777d-27   ; => Proton mass (kg) [2010 value]
ma     = 6.64465675d-27    ; => Alpha-Particle mass (kg) [2010 value]
qq     = 1.602176565d-19   ; => Fundamental charge (C) [2010 value]
kB     = 1.3806488d-23     ; => Boltzmann Constant (J/K) [2010 value]
K_eV   = 1.1604519d4       ; => Factor [Kelvin/eV] [2010 value]
c      = 2.99792458d8      ; => Speed of light in vacuum (m/s)
NG     = 6.67384d-11       ; => Newtonian constant of gravitation [m^3 kg^(-1) s^(-2)]

c2     = (c*1d-3)^2        ; => " " squared (km/s)^2
mm     = [-1d0,0d0,1d0]    ; => [Normal Cyclotron, Landau, Anomalous Cyclotron]
me_ev  = 0.5109906d6       ; => Electron mass in eV/c^2
me_3dp = me_ev/c2          ; => Electron mass [eV/(km/s)^2]
mp_ev  = 938.27231d6       ; => Proton mass in eV/c^2
mp_3dp = mp_ev/c2          ; => Proton mass [eV/(km/s)^2]
pressc = 1.60217646d-13    ; => Conversion from eV/cm^3 to J/m^3 (or Pascals)
picops = pressc*1d12       ; => Conversion from eV/cm^3 to pJ/m^3 (or pPa)
;-----------------------------------------------------------------------------------------
; => Conversion Factors
;-----------------------------------------------------------------------------------------
; => Conversion from electron plasma frequency [Hz] to density [cm^(-3)]
fpeden = (2d0*!DPI)^2*epo*me/qq^2*1d-6
; => Conversion from density [cm^(-3)] to plasma frequency [rad/s]
wpefac = SQRT(1d6*qq^2/me/epo)
wppfac = SQRT(1d6*qq^2/mp/epo)
; => Conversion from magnetic field magnitude [nT] to cyclotron frequency [rad/s]
wcifac = qq*1d-9/mp
wcefac = qq*1d-9/me
; => Conversion from density [cm^(-3)], temperature [eV], and magnetic field
;      magnitude [nT] to plasma beta [unitless]
betafac = 2d0*muo*1d6*(K_eV*kB)/(1d-9)^2
; => Conversion from proton density [cm^(-3)] and proton speed [km s^(-1)] to kinetic
;      energy density [eV cm^(-3) = 1.60217646 x 10^(-9) J m^(-3)]
KE_fac  = 5d-1*mp[0]*(1d3)^2/qq[0]
;---------------------------------------------------
;  1996-04-03
;---------------------------------------------------
date        = '040396'
t           = ['1996-04-03/08:45:00','1996-04-03/10:45:00']
tramp       = '1996-04-03/09:47:17.152'
gnorm8      = [-0.976,-0.181, 0.117]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.006, 0.026, 0.117]
gnorm9      = [-0.992,-0.096,-0.084]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.009, 0.066, 0.084]
ushn        = [  49.6,  33.6]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  43.7,  29.3]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 379.2, 378.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [   3.8,   3.1]
thetaBn89   = [  75.7,  74.6]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 19.71, 22.44]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 24.57, 31.61]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  1.59,  1.40]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  1.49,  0.05]          ; => Compression Ratio [value, uncertainty]
ni_up       =  8.20                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1996-04-08
;---------------------------------------------------
date        = '040896'
t           = ['1996-04-08/01:41:00','1996-04-08/03:41:00']
tramp       = '1996-04-08/02:41:09.767'
gnorm8      = [-0.378,-0.261, 0.888]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.027, 0.022, 0.502]
gnorm9      = [ 0.090, 0.317, 0.944]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.054, 0.068, 0.407]
ushn        = [  76.4,  46.1]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  51.5,  30.7]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 182.3,  10.6]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [   4.0,   4.4]
thetaBn89   = [  73.3,  66.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 19.62, 23.51]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 31.51, 38.29]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.08,  1.41]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  1.68,  0.03]          ; => Compression Ratio [value, uncertainty]
ni_up       = 10.42                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1997-01-10
;---------------------------------------------------
date        = '011097'
t           = ['1997-01-09/23:52:00','1997-01-10/01:52:00']
tramp       = '1997-01-10/00:52:02.939'
gnorm8      = [-0.986,-0.095,-0.140]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.003, 0.014, 0.139]
gnorm9      = [-0.993,-0.096,-0.061]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.008, 0.069, 0.061]
ushn        = [  81.9,  39.9]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  77.4,  37.7]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 450.6, 450.4]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  10.7,  10.3]
thetaBn89   = [  25.5,  23.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 21.72, 38.18]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 19.23, 45.48]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.32,  3.17]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.17,  0.20]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1997-02-27
;---------------------------------------------------
date        = '022797'
t           = ['1997-02-27/16:29:00','1997-02-27/18:29:00']
tramp       = '1997-02-27/17:29:09.050'
gnorm8      = [-0.984, 0.165,-0.073]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.002, 0.009, 0.072]
gnorm9      = [-0.967, 0.251,-0.039]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.017, 0.066, 0.039]
ushn        = [ 122.5,  74.6]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 115.0,  69.8]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 557.4, 542.5]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  30.2,  30.4]
thetaBn89   = [  42.2,  39.6]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 35.87, 41.38]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 66.89, 82.60]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  1.71,  1.61]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  1.67,  0.20]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1997-05-15
;---------------------------------------------------
date        = '051597'
t           = ['1997-05-15/00:15:20','1997-05-15/02:15:20']
tramp       = '1997-05-15/01:15:21.861'
gnorm8      = [-0.918,-0.363,-0.162]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.004, 0.009, 0.161]
gnorm9      = [-0.802, 0.007, 0.598]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.042, 0.066, 0.514]
ushn        = [ 147.0,  67.4]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  87.3,  39.5]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 449.0, 325.6]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  11.5,  10.7]
thetaBn89   = [  85.3,  81.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 29.07, 39.07]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 36.85, 63.98]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.14,  1.86]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.17,  0.13]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1997-10-24
;---------------------------------------------------
date        = '102497'
t           = ['1997-10-24/10:14:00','1997-10-24/12:14:00']
tramp       = '1997-10-24/11:18:09.966'
;  11:18:09.786 - 11:18:10.146
gnorm8      = [-0.963,-0.268,-0.017]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.004, 0.013, 0.017]
gnorm9      = [-0.963,-0.268,-0.028]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.018, 0.066, 0.028]
ushn        = [ 117.4,  50.5]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 117.3,  50.4]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 490.9, 490.7]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  13.0,  13.0]
thetaBn89   = [  68.3,  68.0]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 31.68, 44.92]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 61.04, 78.79]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  1.73,  1.73]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.47,  0.45]          ; => Compression Ratio [value, uncertainty]
ni_up       = 12.04                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1997-12-10
;---------------------------------------------------
date        = '121097'
t           = ['1997-12-10/03:33:00','1997-12-10/05:33:00']
tramp       = '1997-12-10/04:33:14.664'
gnorm8      = [-0.903, 0.168,-0.397]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.015, 0.032, 0.374]
gnorm9      = [-0.971, 0.094,-0.218]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.016, 0.071, 0.214]
ushn        = [ 132.3,  54.3]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 124.0,  50.4]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 391.2, 403.9]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  12.4,  11.7]
thetaBn89   = [  70.9,  71.9]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 34.04, 43.73]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 48.44, 68.60]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.26,  2.12]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.49,  0.35]          ; => Compression Ratio [value, uncertainty]
ni_up       = 11.18                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-04-23
;---------------------------------------------------
date        = '042398'
t           = ['1998-04-23/16:29:00','1998-04-23/18:29:00']
tramp       = '1998-04-23/17:29:02.445'
gnorm8      = [-0.985,-0.165, 0.050]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.002, 0.009, 0.050]
gnorm9      = [-0.989,-0.131, 0.073]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.010, 0.068, 0.072]
ushn        = [  77.7,  32.0]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  76.9,  31.6]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 401.7, 401.6]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [   9.8,   9.8]
thetaBn89   = [  51.7,  49.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 33.42, 47.01]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 24.13, 31.22]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  1.98,  1.97]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.38,  0.31]          ; => Compression Ratio [value, uncertainty]
ni_up       = 15.00                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-04-30
;---------------------------------------------------
date        = '043098'
t           = ['1998-04-30/07:43:00','1998-04-30/09:43:00']
tramp       = '1998-04-30/08:43:15.291'
gnorm8      = [-0.690,-0.613, 0.385]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.011, 0.012, 0.365]
gnorm9      = [-0.352,-0.681,-0.642]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.067, 0.051, 0.535]
ushn        = [ 114.4,  38.0]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  44.8,  15.1]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 331.2, 171.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [   6.3,   5.4]
thetaBn89   = [  64.6,  30.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 16.56, 38.71]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [  7.33, 16.58]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  6.39,  2.63]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  3.03,  0.21]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-05-15
;---------------------------------------------------
date        = '051598'
t           = ['1998-05-15/12:53:00','1998-05-15/14:53:00']
tramp       = '1998-05-15/13:53:46.079'
gnorm8      = [-0.744,-0.661,-0.095]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.006, 0.007, 0.095]
gnorm9      = [-0.190,-0.441,-0.877]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.052, 0.058, 0.514]
ushn        = [  83.3,  39.9]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [  52.5,  25.2]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 328.5, 134.2]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [   2.1,   4.4]
thetaBn89   = [  52.7,  55.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 18.45, 32.21]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 18.07, 27.59]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.40,  2.13]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.10,  0.07]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-08-26
;---------------------------------------------------
date        = '082698'
t           = ['1998-08-26/05:40:00','1998-08-26/07:40:00']  ; => For moment writing
tramp       = '1998-08-26/06:40:24.972'
gnorm8      = [-0.655, 0.040,-0.754]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.010, 0.009, 0.561]
gnorm9      = [-0.822, 0.138,-0.553]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.040, 0.070, 0.488]
ushn        = [ 401.3, 142.3]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 379.6, 135.6]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 687.4, 747.2]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  26.8,  25.5]
thetaBn89   = [  82.2,  78.7]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 54.98,163.47]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 64.75,111.14]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  4.74,  4.49]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.88,  0.31]          ; => Compression Ratio [value, uncertainty]
ni_up       =  6.68                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-09-24
;---------------------------------------------------
date        = '092498'
t           = ['1998-09-24/22:20:00','1998-09-25/00:20:00']
tramp       = '1998-09-24/23:20:37.374'
gnorm8      = [-0.914,-0.220,-0.341]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.004, 0.009, 0.327]
gnorm9      = [-0.939,-0.175,-0.296]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.024, 0.070, 0.287]
ushn        = [ 386.3, 174.6]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 381.2, 171.3]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 772.4, 780.0]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  95.6,  95.5]
thetaBn89   = [  82.1,  78.6]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 68.20,133.24]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [114.45,213.44]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.91,  2.87]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.17,  0.38]          ; => Compression Ratio [value, uncertainty]
ni_up       =  8.40                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2000-02-11 [A]
;---------------------------------------------------
date        = '021100'
t           = ['2000-02-11/01:35:07','2000-02-11/03:35:07']
tramp       = '2000-02-11/02:35:07.281'
gnorm8      = [-0.998, 0.061,-0.006]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.001, 0.018, 0.006]
gnorm9      = [-0.999, 0.044, 0.006]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.003, 0.069, 0.006]
ushn        = [ 119.1,  47.1]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 119.4,  47.5]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 524.7, 525.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  14.5,  14.3]
thetaBn89   = [  12.0,  12.2]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 40.08, 89.08]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 74.31, 81.94]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  1.59,  1.59]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.56,  0.49]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2000-02-11 [B]
;---------------------------------------------------
date        = '021100'
t           = ['2000-02-11/22:33:00','2000-02-12/00:33:00']
tramp       = '2000-02-11/23:33:55.319'
gnorm8      = [-0.865,-0.452, 0.218]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.017, 0.030, 0.214]
gnorm9      = [-0.930,-0.367,-0.028]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.025, 0.063, 0.028]
ushn        = [ 263.6,  81.7]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 255.3,  79.3]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 641.4, 661.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  13.2,  12.3]
thetaBn89   = [  86.5,  89.9]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 46.87, 77.54]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 66.20,123.23]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.25,  3.15]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  3.27,  0.50]          ; => Compression Ratio [value, uncertainty]
ni_up       =  5.31                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2000-04-06
;---------------------------------------------------
date        = '040600'
t           = ['2000-04-06/15:00:00','2000-04-06/18:00:00']
tramp       = '2000-04-06/16:32:09.237'
gnorm8      = [-0.984,-0.078,-0.162]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.002, 0.009, 0.161]
gnorm9      = [-0.988,-0.061,-0.140]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.011, 0.070, 0.139]
ushn        = [ 278.1, 79.8]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 277.4, 79.7]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 646.9, 647.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  97.9,  97.6]
thetaBn89   = [  69.6,  68.5]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 29.87, 92.08]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 64.81,136.41]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.97,  3.97]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  3.84,  1.25]          ; => Compression Ratio [value, uncertainty]
ni_up       =  8.62                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2001-10-11
;---------------------------------------------------
date        = '101101'
t           = ['2001-10-11/15:50:00','2001-10-11/17:50:00']
tramp       = '2001-10-11/16:50:55.330'
gnorm8      = [-0.999,-0.009, 0.050]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.001, 0.009, 0.050]
gnorm9      = [-0.999, 0.044, 0.017]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.003, 0.068, 0.017]
ushn        = [ 220.7,  75.7]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 217.5,  74.5]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 581.2, 576.5]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  22.5,  22.5]
thetaBn89   = [  52.3,  49.3]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 27.89, 64.32]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 71.05,115.22]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.96,  2.92]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.79,  0.43]          ; => Compression Ratio [value, uncertainty]
ni_up       =  8.29                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2001-10-21
;---------------------------------------------------
date        = '102101'
t           = ['2001-10-21/15:40:00','2001-10-21/17:40:00']
tramp       = '2001-10-21/16:40:44.433'
gnorm8      = [-0.987,-0.061,-0.151]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.003, 0.018, 0.150]
gnorm9      = [-0.988,-0.043,-0.151]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.011, 0.070, 0.150]
ushn        = [ 277.0,  81.7]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 276.1,  81.2]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 636.4, 636.0]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  30.3,  30.2]
thetaBn89   = [  65.7,  65.8]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 64.27,149.87]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 58.45, 87.42]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.17,  3.16]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  4.31,  1.88]          ; => Compression Ratio [value, uncertainty]
ni_up       =  9.54                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2001-10-25
;---------------------------------------------------
date        = '102501'
t           = ['2001-10-25/07:59:00','2001-10-25/09:59:00']
tramp       = '2001-10-25/09:00:03.700'
gnorm8      = [-0.671,-0.350, 0.654]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.021, 0.022, 0.539]
gnorm9      = [-0.484, 0.126, 0.866]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.051, 0.071, 0.524]
ushn        = [ 119.6,  29.6]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 101.6,  25.5]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 366.9, 264.7]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  11.8,   9.8]
thetaBn89   = [  63.3,  68.9]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 13.18, 55.58]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 25.83, 42.84]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  4.19,  3.54]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  4.27,  0.87]          ; => Compression Ratio [value, uncertainty]
ni_up       =  5.13                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2001-11-24 [A]
;---------------------------------------------------
date        = '112401'
t           = ['2001-11-24/03:54:00','2001-11-24/05:54:00']
; 04:54:03.800 - 04:54:43.540
tramp       = '2001-11-24/04:54:23.670'
gnorm8      = [-0.888, 0.333,-0.318]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.007, 0.011, 0.307]
gnorm9      = [-0.871, 0.344,-0.352]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.032, 0.055, 0.337]
ushn        = [ 165.9, 104.5]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 158.0,  99.2]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 617.8, 604.4]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [ 184.8, 171.3]
thetaBn89   = [  69.3,  71.5]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 81.55,114.81]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 61.36, 83.74]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  1.65,  1.57]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  1.67,  0.33]          ; => Compression Ratio [value, uncertainty]
ni_up       =     f                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2001-11-24 [B]
;---------------------------------------------------
date        = '112401'
t           = ['2001-11-24/04:31:00','2001-11-24/06:51:00']
tramp       = '2001-11-24/05:51:56.955'
gnorm8      = [-0.991, 0.131,-0.028]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.003, 0.025, 0.028]
gnorm9      = [-0.986, 0.165,-0.017]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.011, 0.067, 0.017]
ushn        = [ 378.2,  68.6]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 381.8,  69.2]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [1024.0,1025.4]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  44.6,  44.7]
thetaBn89   = [  89.5,  88.9]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [109.41,224.88]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 71.82,162.27]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.91,  2.93]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  5.12,  1.09]          ; => Compression Ratio [value, uncertainty]
ni_up       =  4.60                    ; => Avg. upstream density [cm^(-3)]
;-----------------------------------------------------------------------------------------
; => Load 3s B-fields
;-----------------------------------------------------------------------------------------
tr3         = time_double(t)
tura        = time_double(tramp)
mydate      = my_str_date(DATE=date)
date        = mydate.S_DATE[0]  ; => ('MMDDYY')
mdate       = mydate.DATE[0]    ; => ('YYYYMMDD')
tdate       = mydate.TDATE[0]

mfi3s       = read_wind_mfi(TRANGE=tr3)
bgse        = mfi3s.BGSE
bgsm        = mfi3s.BGSM
bmags       = mfi3s.MAG
t3x         = bgse.X
nt          = N_ELEMENTS(t3x)

store_data,'wi_B3_MAG',DATA=bmags
store_data,'wi_B3_GSE',DATA=bgse
store_data,'wi_B3_GSM',DATA=bgsm
nn0    = ['wi_B3_MAG','wi_B3_GSE']
options,'wi_B3_MAG','YTITLE','|B| [3s, nT]'
options,'wi_B3_GSE','YTITLE','B (nT)!C[GSE, 3s]'
options,'wi_B3_GSM','YTITLE','B (nT)!C[GSM, 3s]'
options,['wi_B3_GSE','wi_B3_GSM'],'COLORS',[250,150,50]
WINDOW,0,RETAIN=2,XSIZE=1700,YSIZE=1100
tplot,nn0,TRANGE=tr3
;-----------------------------------------------------------------------------------------
; => Load orbit data
;-----------------------------------------------------------------------------------------
wind_orbit_to_tplot,BNAME='wi_B3_GSE',TRANGE=tr3
options,'Wind_Radial_Distance','YTITLE','Radial Dist. (R!DE!N)'
options,'Wind_GSE_Latitude','YTITLE','GSE Lat. [deg]'
options,'Wind_GSE_Longitude','YTITLE','GSE Lon. [deg]'
gnames = ['Wind_Radial_Distance','Wind_GSE_Latitude','Wind_GSE_Longitude','Wind_MLT']
tplot_options, var_label=gnames

htr_t  = t3x
nhtr_t = htr_t - tura[0]   ; => normalize to zero
ndist  = v_shn89[0]*nhtr_t   ; => km
; => Compute estimates of upstream inertial lengths
IF (FINITE(ni_up[0])) THEN einert = c/(wpefac[0]*SQRT(ni_up[0])) ELSE einert = f
IF (FINITE(ni_up[0])) THEN iinert = c/(wppfac[0]*SQRT(ni_up[0])) ELSE iinert = f
einert *= 1d-3  ; => Convert to km
iinert *= 1d-3  ; => Convert to km

store_data,'normal_distance',DATA={X:htr_t,Y:ndist}
options,'normal_distance','YTITLE','Dist. [Normal, km]'
store_data,'normal_distance_c-wpe',DATA={X:htr_t,Y:ndist/einert[0]}
options,'normal_distance_c-wpe','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpe!N'+']'
store_data,'normal_distance_c-wpi',DATA={X:htr_t,Y:ndist/iinert[0]}
options,'normal_distance_c-wpi','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpi!N'+']'

gnames = ['Wind_Radial_Distance','normal_distance','normal_distance_c-wpe','normal_distance_c-wpi']
tplot_options, VAR_LABEL=gnames

nnw = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Find IDL Save Files
;-----------------------------------------------------------------------------------------
default_extension = '/wind_3dp_pros/wind_data_dir/Wind_3DP_DATA/IDL_Save_Files/'
default_location  = default_extension+date+'/'

DEFSYSV,'!wind3dp_umn',EXISTS=exists
IF NOT KEYWORD_SET(exists) THEN mdir  = FILE_EXPAND_PATH('')+default_location
IF     KEYWORD_SET(exists) THEN mdir  = !wind3dp_umn.WIND_3DP_SAVE_FILE_DIR+date+'/'
IF (mdir EQ '')            THEN mdir = default_location
mfiles = FILE_SEARCH(mdir,'*.sav')
;-----------------------------------------------------------------------------------------
; -Load PHB data
;-----------------------------------------------------------------------------------------
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; => Note:  In the IDL save files I used, variables like "ael" are arrays of all the 
;             Wind/3DP data structures within some time period (defined else where)
;             for the Eesa Low detector.  Thus, "aelb" is for Eesa Low Burst, "apl" is
;             for Pesa Low, etc.  The prefix "a" is used loosely to represent ALL here.
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
RESTORE,mfiles[1]

;-----------------------------------------------------------------------------------------
; => Find shock info
;-----------------------------------------------------------------------------------------
sh_mit     = read_shocks_jck_database()
mit_dates  = sh_mit.SDATES                 ; => 'MMDDYY'
shocks     = sh_mit.SHOCK
header     = sh_mit.HEADER
ymdb_ra    = header.DATE_TIME              ; => ['YYYY-MM-DD/HH:MM:SS.sss']
mts        = my_time_string(ymdb_ra,STR=1,FORM=1)
unix_ra    = mts.UNIX

a_ushn     = shocks.USH_N[*,0]                 ; => Upstream normal flow speed (km/s) [shock frame]
a_dushn    = shocks.D_USH_N[*,0]               ; => Uncertainty in a_ushn
a_vshn     = shocks.VSH_N[*,0]                 ; => Upstream normal flow speed (km/s) [SC frame]
a_dvshn    = shocks.D_VSH_N[*,0]               ; => Uncertainty in a_vshn
a_compr    = shocks.COMPRESSION                ; => N_2/N_1 (density compression ratio)
a_dcompr   = shocks.D_COMPRESSION              ; => Uncertainty in a_compr
a_machf    = REFORM(shocks.MACH_FAST[*,0])     ; => Fast Mach number
a_dmachf   = REFORM(shocks.D_MACH_FAST[*,0])   ; => Uncertainty in a_machf
a_thbn     = shocks.THETA_BN                   ; => Shock normal angle (deg)
a_dthbn    = shocks.D_THETA_BN                 ; => Uncertainty in a_thbn
a_vsw      = header.VSW[*,*,0]                 ; => Upstream Avg. solar wind velocity [GSE, km/s]
a_dvsw     = header.D_VSW[*,*,0]               ; => Uncertainty in a_vsw
a_magf     = header.MAGF[*,*,0]                ; => Upstream Avg. magnetic field [GSE, nT]
a_dmagf    = header.D_MAGF[*,*,0]              ; => Uncertainty in a_magf
a_csup     = header.C_SOUND[*,0]               ; => Upstream Avg. sound speed (km/s)
a_dcsup    = header.D_C_SOUND[*,0]             ; => Uncertainty in a_csup
a_vaup     = header.V_ALFVEN[*,0]              ; => Upstream Avg. Alfven speed (km/s)
a_dvaup    = header.D_V_ALFVEN[*,0]            ; => Uncertainty in a_vaup
a_shnorms  = shocks.SH_NORM                    ; => Shock normal vector (GSE)

; => Determine shock to use
gshock     = WHERE(mit_dates EQ date,gsh)
; => There are two shocks on 2000-02-11, but the 2nd is a supercritical 
;      quasi-perpendicular shock while the first is quasi-parallel so the 2nd
;      is typically examined more frequently
IF (date EQ '021100') THEN kk = 1 ELSE kk = 0
gnorm = REFORM(a_shnorms[gshock[kk],*])
gthbn = (REFORM(a_thbn[gshock[kk]]))[0]
gcomp = (REFORM(a_compr[gshock[kk]]))[0]
gavsw = REFORM(a_vsw[gshock[kk],*])
gmagf = REFORM(a_magf[gshock[kk],*])

gvshn = (REFORM(a_vshn[gshock[kk]]))[0]
;-----------------------------------------------------------------------------------------
; => Calculate relevant reflected ion velocities [reference equations found in citation]
;
;    Gosling, Thomsen, Bame, Feldman, Paschmann, and Sckopke (1982), 
;      "Evidence for Specularly Reflected Ions Upstream from the Quasi-
;       Parallel Bow Shock," J. Geophys. Res. Vol 9, pg 1333.
;
;    Thomsen, M.F., S.J. Schwartz, and J.T. Gosling (1983), "Observational Evidence on
;        the Origin of Ions Upstream of the Earth's Bow Shock," J. Geophys. Res.
;        Vol. 88, pp. 7843-7852.
;-----------------------------------------------------------------------------------------

gnorm    = gnorm8  ;; use RH08 from JCK's site
; => Vsw [GSE], |Vsw| (km/s)
vsw_up0  = REFORM(gavsw)
vmag_u0  = NORM(vsw_up0)
; => B [GSE], |B| (nT)
mag_up0  = REFORM(gmagf)
bmag_u0  = NORM(mag_up0)
; => calculate unit vectors
bhat0    = mag_up0/bmag_u0[0]
vhat0    = vsw_up0/vmag_u0[0]
; => calculate upstream inflow velocity
v_up_0   = vsw_up0 - gnorm*gvshn[0]
; => Eq. 2 from Gosling et al., [1982]
;      [specularly reflected ion velocity]
Vref_0   = v_up_0 - gnorm*(2d0*my_dot_prod(v_up_0,gnorm,/NOM))
; => Eq. 4 and 3 from Gosling et al., [1982]
;      [guiding center velocity of a specularly reflected ion]
Vper_r0  = v_up_0 - bhat0*my_dot_prod(v_up_0,bhat0,/NOM)  ; => Eq. 4
Vgc_r_0  = Vper_r0 + bhat0*(my_dot_prod(Vref_0,bhat0,/NOM))
; => Eq. 6 from Gosling et al., [1982]
;      [gyro-velocity of a specularly reflected ion]
Vgy_r_0  = Vref_0 - Vgc_r_0
; => Eq. 7 and 9 from Gosling et al., [1982]
;      [guiding center velocity of a specularly reflected ion perp. to shock surface]
Vgcn_r_0 = my_dot_prod(Vgc_r_0,gnorm,/NOM)
;      [guiding center velocity of a specularly reflected ion para. to B-field]
Vgcb_r_0 = my_dot_prod(Vgc_r_0,bhat0,/NOM)
; => gyrospeed
Vgy_rs_0 = NORM(REFORM(Vgy_r_0))

PRINT,';', Vgcn_r_0[0], Vgcb_r_0[0], Vgy_rs_0[0]
;-----------------------------------------------------------------------------------------
; => Plot all Pesa High Burst (PHB) Distribution Functions (DFs)
;-----------------------------------------------------------------------------------------
ngrid    = 20L            ; => # of grids to use on contours
vlim     = 25e2           ; => velocity limit for X and Y axes on contour plot
sunv     = [1.,0.,0.]     ; => sun direction in GSE coordinates
sunn     = 'Sun Dir.'     ; => string associated with sun direction
xname    = 'B!Do!N'       ; => Name of 1st vector used to define plane of projection
yname    = 'V!Dsw!N'      ; => Name of 2nd " "
normnm   = 'Shock Normal'
gnorm    = gnorm8

plane    = 'xy'
;=========================================================================================
;               PLANE      :  Scalar string defining the plane projection to plot with
;                               corresponding cuts [Let V1 = VECTOR1, V2 = VECTOR2]
;                                 'xy'  :  horizontal axis parallel to V1 and normal
;                                            vector to plane defined by (V1 x V2)
;                                            [default]
;                                 'xz'  :  horizontal axis parallel to (V1 x V2) and
;                                            vertical axis parallel to V1
;                                 'yz'  :  horizontal axis defined by (V1 x V2) x V1
;                                            and vertical axis (V1 x V2)
;=========================================================================================
WINDOW,1,RETAIN=2,XSIZE=800,YSIZE=1100


dat      = aphb[j]
vec1     = dat.MAGF
vec2     = dat.VSW

; => Non-smoothed DF cuts
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,      $
                      YNAME=yname,PLANE=plane[0],/NO_REDF

; => Smoothed DF cuts and contours
ns       = 5L
smc      = 1
smct     = 1
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,       $
                      YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,PLANE=plane[0], $
                      SM_CONT=smct,/NO_REDF

; => Add one-count level DF parallel cut
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,       $
                      YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,PLANE=plane[0], $
                      SM_CONT=smct,/NO_REDF,/ONE_C

; => Add shock normal vector to DF contour
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,       $
                      YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,PLANE=plane[0], $
                      SM_CONT=smct,/NO_REDF,/ONE_C,EX_VN0=normnm[0],     $
                      EX_VEC0=gnorm

; => Plot DF contour in the plane defined by the (V x B) and B x (V x B) directions
plane    = 'yz'
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,       $
                      YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,PLANE=plane[0], $
                      SM_CONT=smct,/NO_REDF,/ONE_C,EX_VN0=normnm[0],     $
                      EX_VEC0=gnorm

; => Add circle of constant velocity (e.g. 500 km/s) to contour for reference
;      [useful for putting gyro-velocities on contours for shock reflection]
plane    = 'xy'
vgy      = 500d0
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,       $
                      YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,PLANE=plane[0], $
                      SM_CONT=smct,/NO_REDF,/ONE_C,EX_VN0=normnm[0],     $
                      EX_VEC0=gnorm,VCIRC=vgy

; => Force the cuts and contour levels to have a specific range of values
dfra     = [1e-14,1e-9]
contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,       $
                      YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,PLANE=plane[0], $
                      SM_CONT=smct,/NO_REDF,/ONE_C,EX_VN0=normnm[0],     $
                      EX_VEC0=gnorm,VCIRC=vgy,DFRA=dfra

;-----------------------------------------------------------------------------------------
; => Save plots to PS files
;-----------------------------------------------------------------------------------------
ngrid    = 20L            ; => # of grids to use on contours
vlim     = 25e2           ; => velocity limit for X and Y axes on contour plot
sunv     = [1.,0.,0.]     ; => sun direction in GSE coordinates
sunn     = 'Sun Dir.'     ; => string associated with sun direction
xname    = 'B!Do!N'       ; => Name of 1st vector used to define plane of projection
yname    = 'V!Dsw!N'      ; => Name of 2nd " "
normnm   = 'Shock Normal'
gnorm    = gnorm8

plane    = 'xy'
dfra     = [1e-14,1e-9]
; => Put a circles of constant energy at 500 km/s increments on contours
vcirc    = 5d2*[1d0,2d0,3d0]

yra_str  = STRING(dfra,FORMAT='(E10.1)')
yra_s2   = STRCOMPRESS(string_replace_char(yra_str,'+',''),/REMOVE_ALL)
yra_suf  = yra_s2[0]+'_'+yra_s2[1]
df_sfx   = yra_suf[0]

nphb     = N_ELEMENTS(aphb)
fnm      = file_name_times(aphb.TIME[0],PREC=3)
ftimes   = fnm.F_TIME          ;; e.g. 1998-08-09_0801x09.494
dfdir    = FILE_EXPAND_PATH('')+'/'
gr_str   = STRTRIM(STRING(FORMAT='(I2.2)',ngrid),2)+'Grids'
vlim_st  = STRING(vlim[0],FORMAT='(I5.5)')
dfsuff   = '_3D-'+gr_str[0]+'_'+vlim_st[0]+'km-s_one-count_SCPot-Vsw-Bo_norm-RH08_Cuts-DF_'

xyzvecf  = ['V1','V1xV2xV1','V1xV2']
xy_suff  = '_'+xyzvecf[1]+'_vs_'+xyzvecf[0]

pref     = dfdir[0]+'phb_3s-mfi_'
fnames   = pref[0]+ftimes+dfsuff[0]+yra_suf[0]

FOR j=0L, nphb - 1L DO BEGIN                                                         $
  dat    = aphb[j]                                                                 & $
  vec1   = dat[0].MAGF                                                             & $
  vec2   = dat[0].VSW                                                              & $
  popen,fnames[j],/PORT                                                            & $
    contour_3d_1plane,dat,vec1,vec2,VLIM=vlim,NGRID=ngrid,XNAME=xname,               $
                              YNAME=yname,SM_CUTS=smc,NSMOOTH=ns,/ONE_C,             $
                              DFRA=dfra,VCIRC=vcirc[*],PLANE='xy',EX_VEC1=sunv,      $
                              EX_VN1=sunn[0],EX_VEC0=gnorm,EX_VN0=normnm[0],         $
                              SM_CONT=smct,/NO_REDF                                & $
  pclose

;-----------------------------------------------------------------------------------------
; => Coordinate system definitions (DF plots are Y' vs. X')
;-----------------------------------------------------------------------------------------

; =>  X'Y'-Plane:  Defined by (V_sw x B) and V_sw
; =>  Z'        :  Defined by (V_sw x B) x V_sw
; =>  X'        :  Defined by (V_sw x B)
; =>  Y'        :  Defined by V_sw x [(V_sw x B) x V_sw]

          X'
         |
         |
         |
         |
        /|\ (V_sw x B)
 V_sw    |
   |\    |
     \   |
   |  \  |
       \ |
   |    \|___________________________ Z' [= (V_sw x B) x V_sw]
        /
   |/| /
   / |/
   | /
   |/
   /
  /
 /
/ Y' {= V_sw x [(V_sw x B) x V_sw]}




; =>  X'Y'-Plane:  Defined by B and V_sw
; =>  Z'        :  Defined by (V_sw x B)
; =>  X'        :  Defined by B
; =>  Y'        :  Defined by B x (V_sw x B)


          X'
         |
         |
         |
         |
        /|\ B
 V_sw    |
   |\    |
     \   |
   |  \  |
       \ |
   |    \|___________________________ Z' (= V_sw x B)
        /
   |/| /
   / |/
   | /
   |/
   /
  /
 /
/ Y' [= B x (V_sw x B)]



; =>  X'Y'-Plane:  Defined by (V_sw x B) and [B x (V_sw x B)]
; =>  Z'        :  Defined by B
; =>  X'        :  Defined by (V_sw x B)
; =>  Y'        :  Defined by B x (V_sw x B)


          X' (= V_sw x B)
         |
         |
         |
         |
         |
         |
         |
         |
         |
         |                       B
         |______________________\____ Z'
        / \   |_|               /
       /   \    |
      /     \   |
     /       \  |
    /         \ |
   /           \| V_sw
  /
 /
/ Y' [= B x (V_sw x B)]





